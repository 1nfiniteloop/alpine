#!/bin/bash

# Configuration
readonly PATCH_DIR=/etc/patch.d
readonly BACKUP_SUFFIX="~"
readonly WORKDIR=/tmp/patch


error()
{
  local error_="${@}"
  >&2 echo -e "ERROR: ${error_}"
  false
}

print_usage_and_exit()
{
  echo -e "\n\tUsage: ${0##*/} [--dst ${PATCH_DIR}] <file>\n"
  exit 1
}

create_patch()
{
  local file_=$(readlink -f ${1})
  local dst_path=${2}
  local file_name=${file_##*/}
  local file_path=${file_%${file_name}}
  mkdir -p ${WORKDIR}/{a,b}/${file_path} ${PATCH_DIR} \
    && ln -s ${file_}${BACKUP_SUFFIX} ${WORKDIR}/a${file_} \
    && ln -s ${file_} ${WORKDIR}/b${file_} \
    && (cd ${WORKDIR} && diff -r a/ b/ > ${dst_path}/${file_name}.patch)
  rm -r ${WORKDIR}
}

positional=()
while [[ $# -gt 0 ]]; do
  key="${1}"
  case $key in
    --dst)
      dst_path=${2}
      shift
      shift
    ;;
    *)
      positional+=("${1}")
      shift
    ;;
  esac
done

set -- "${positional[@]}"

readonly file="${1}"

if [[ -z "${file}" ]]; then
  print_usage_and_exit
elif [[ ! -e "${file}" ]]; then
  error "file '${file}' does not exists."
elif [[ ! -e "${file}${BACKUP_SUFFIX}" ]]; then
  error "file: ${file}${BACKUP_SUFFIX} does not exists," \
        "can't make a patch without the original file."
else
  create_patch ${file} ${dst_path:-$PATCH_DIR}
fi
